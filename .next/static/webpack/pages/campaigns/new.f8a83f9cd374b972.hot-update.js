"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/campaigns/new",{

/***/ "./ethereum/web3.js":
/*!**************************!*\
  !*** ./ethereum/web3.js ***!
  \**************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3 */ \"./node_modules/web3/dist/web3.min.js\");\n\nlet web3;\n// IF we are in the browser && if metamask has already injected web3\nif ( true && typeof window.ethereum) {\n    // We create an instance of a web3 with a copy of web3 that was injected by metamask\n    window.ethereum.request({\n        method: \"eth_requestAccounts\"\n    });\n    web3 = new web3__WEBPACK_IMPORTED_MODULE_0__(window.ethereum);\n// ELSE we are on the server OR the user isnt running metamask \n} else {\n    // We gonna set up our one provider that connects to the Goerli network throught infura\n    // & then use that as the provider dor ou web3 instance\n    const provider = new web3__WEBPACK_IMPORTED_MODULE_0__.providers.HttpProvider(\"https://goerli.infura.io/v3/05d4b879233249e0b075b66657ceeba6\");\n    web3 = new web3__WEBPACK_IMPORTED_MODULE_0__(provider);\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (web3);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ldGhlcmV1bS93ZWIzLmpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQXdCO0FBRXhCLElBQUlDO0FBR0osb0VBQW9FO0FBQ3BFLElBQUssS0FBa0IsSUFBZSxPQUFPQyxPQUFPQyxRQUFRLEVBQUc7SUFDM0Qsb0ZBQW9GO0lBQ3BGRCxPQUFPQyxRQUFRLENBQUNDLE9BQU8sQ0FBQztRQUFFQyxRQUFRO0lBQXNCO0lBQ3hESixPQUFPLElBQUlELGlDQUFJQSxDQUFDRSxPQUFPQyxRQUFRO0FBQ25DLCtEQUErRDtBQUMvRCxPQUFPO0lBQ0gsdUZBQXVGO0lBQ3ZGLHVEQUF1RDtJQUN2RCxNQUFNRyxXQUFXLElBQUlOLHdEQUEyQixDQUM1Q1MsOERBQWtDO0lBRXRDUixPQUFPLElBQUlELGlDQUFJQSxDQUFDTTtBQUNwQixDQUFDO0FBR0QsK0RBQWVMLElBQUlBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vZXRoZXJldW0vd2ViMy5qcz85NjdjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBXZWIzIGZyb20gXCJ3ZWIzXCI7XG4gXG5sZXQgd2ViMztcblxuXG4vLyBJRiB3ZSBhcmUgaW4gdGhlIGJyb3dzZXIgJiYgaWYgbWV0YW1hc2sgaGFzIGFscmVhZHkgaW5qZWN0ZWQgd2ViM1xuaWYgKCB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2Ygd2luZG93LmV0aGVyZXVtICkge1xuICAgIC8vIFdlIGNyZWF0ZSBhbiBpbnN0YW5jZSBvZiBhIHdlYjMgd2l0aCBhIGNvcHkgb2Ygd2ViMyB0aGF0IHdhcyBpbmplY3RlZCBieSBtZXRhbWFza1xuICAgIHdpbmRvdy5ldGhlcmV1bS5yZXF1ZXN0KHsgbWV0aG9kOiBcImV0aF9yZXF1ZXN0QWNjb3VudHNcIiB9KTtcbiAgICB3ZWIzID0gbmV3IFdlYjMod2luZG93LmV0aGVyZXVtKTtcbi8vIEVMU0Ugd2UgYXJlIG9uIHRoZSBzZXJ2ZXIgT1IgdGhlIHVzZXIgaXNudCBydW5uaW5nIG1ldGFtYXNrIFxufSBlbHNlIHtcbiAgICAvLyBXZSBnb25uYSBzZXQgdXAgb3VyIG9uZSBwcm92aWRlciB0aGF0IGNvbm5lY3RzIHRvIHRoZSBHb2VybGkgbmV0d29yayB0aHJvdWdodCBpbmZ1cmFcbiAgICAvLyAmIHRoZW4gdXNlIHRoYXQgYXMgdGhlIHByb3ZpZGVyIGRvciBvdSB3ZWIzIGluc3RhbmNlXG4gICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgV2ViMy5wcm92aWRlcnMuSHR0cFByb3ZpZGVyKFxuICAgICAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19JTkZVUkFfVVJMXG4gICAgKTtcbiAgICB3ZWIzID0gbmV3IFdlYjMocHJvdmlkZXIpO1xufVxuXG4gXG5leHBvcnQgZGVmYXVsdCB3ZWIzO1xuXG4iXSwibmFtZXMiOlsiV2ViMyIsIndlYjMiLCJ3aW5kb3ciLCJldGhlcmV1bSIsInJlcXVlc3QiLCJtZXRob2QiLCJwcm92aWRlciIsInByb3ZpZGVycyIsIkh0dHBQcm92aWRlciIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19JTkZVUkFfVVJMIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ethereum/web3.js\n"));

/***/ })

});